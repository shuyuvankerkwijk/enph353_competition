// Generated by gencpp from file neural_net_driving/ImageProcessor.msg
// DO NOT EDIT!


#ifndef NEURAL_NET_DRIVING_MESSAGE_IMAGEPROCESSOR_H
#define NEURAL_NET_DRIVING_MESSAGE_IMAGEPROCESSOR_H

#include <ros/service_traits.h>


#include <neural_net_driving/ImageProcessorRequest.h>
#include <neural_net_driving/ImageProcessorResponse.h>


namespace neural_net_driving
{

struct ImageProcessor
{

typedef ImageProcessorRequest Request;
typedef ImageProcessorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct ImageProcessor
} // namespace neural_net_driving


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::neural_net_driving::ImageProcessor > {
  static const char* value()
  {
    return "222963dddca319dd44aea7d612d0ab69";
  }

  static const char* value(const ::neural_net_driving::ImageProcessor&) { return value(); }
};

template<>
struct DataType< ::neural_net_driving::ImageProcessor > {
  static const char* value()
  {
    return "neural_net_driving/ImageProcessor";
  }

  static const char* value(const ::neural_net_driving::ImageProcessor&) { return value(); }
};


// service_traits::MD5Sum< ::neural_net_driving::ImageProcessorRequest> should match
// service_traits::MD5Sum< ::neural_net_driving::ImageProcessor >
template<>
struct MD5Sum< ::neural_net_driving::ImageProcessorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::neural_net_driving::ImageProcessor >::value();
  }
  static const char* value(const ::neural_net_driving::ImageProcessorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::neural_net_driving::ImageProcessorRequest> should match
// service_traits::DataType< ::neural_net_driving::ImageProcessor >
template<>
struct DataType< ::neural_net_driving::ImageProcessorRequest>
{
  static const char* value()
  {
    return DataType< ::neural_net_driving::ImageProcessor >::value();
  }
  static const char* value(const ::neural_net_driving::ImageProcessorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::neural_net_driving::ImageProcessorResponse> should match
// service_traits::MD5Sum< ::neural_net_driving::ImageProcessor >
template<>
struct MD5Sum< ::neural_net_driving::ImageProcessorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::neural_net_driving::ImageProcessor >::value();
  }
  static const char* value(const ::neural_net_driving::ImageProcessorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::neural_net_driving::ImageProcessorResponse> should match
// service_traits::DataType< ::neural_net_driving::ImageProcessor >
template<>
struct DataType< ::neural_net_driving::ImageProcessorResponse>
{
  static const char* value()
  {
    return DataType< ::neural_net_driving::ImageProcessor >::value();
  }
  static const char* value(const ::neural_net_driving::ImageProcessorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NEURAL_NET_DRIVING_MESSAGE_IMAGEPROCESSOR_H
